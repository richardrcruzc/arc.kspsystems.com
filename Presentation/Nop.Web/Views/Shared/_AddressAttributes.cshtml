@model IList<AddressAttributeModel>
@using Nop.Core.Domain.Catalog;
@foreach (var attribute in Model)
{
    var controlId = $"address_attribute_{attribute.Id}";
    var textPrompt = attribute.Name;

<div class="inputs custom-attributes">

    @if (textPrompt == "Ship-To Company Name" || textPrompt == "Ship-To Name")
    {

    <div class="divDropShip" style="display:none">
        <label>@textPrompt:</label>
    </div>


    }
    else
    {

        <label>@textPrompt:</label>
    }



    @switch (attribute.AttributeControlType)
    {
        case AttributeControlType.DropdownList:
            {
                <select name="@(controlId)" id="@(controlId)">
                    @if (!attribute.IsRequired)
                    {
                        <option value="0">---</option>
                    }
                    @foreach (var attributeValue in attribute.Values)
                    {
                        <option selected="@attributeValue.IsPreSelected" value="@attributeValue.Id">@attributeValue.Name</option>
                    }
                </select>
            }
            break;
        case AttributeControlType.RadioList:
            {
                <ul class="option-list">
                    @foreach (var attributeValue in attribute.Values)
                    {
                        <li>
                            <input id="@(controlId)_@(attributeValue.Id)" type="radio" name="@(controlId)" value="@attributeValue.Id" checked="@attributeValue.IsPreSelected" />
                            <label for="@(controlId)_@(attributeValue.Id)">@attributeValue.Name</label>
                        </li>
                    }
                </ul>
            }
            break;
        case AttributeControlType.Checkboxes:
        case AttributeControlType.ReadonlyCheckboxes:
            {
                <ul class="option-list">
                    @foreach (var attributeValue in attribute.Values)
                    {
                    <li>
                        @if (attributeValue.Name == "Drop Ship")
    {
                    <input class="checkDropShip" id="@(controlId)_@(attributeValue.Id)" type="checkbox" name="@(controlId)" value="@attributeValue.Id" checked="@attributeValue.IsPreSelected" @(attribute.AttributeControlType == AttributeControlType.ReadonlyCheckboxes ? Html.Raw(" disabled=\"disabled\"") : null) />
}
else
{

                    <input id="@(controlId)_@(attributeValue.Id)" type="checkbox" name="@(controlId)" value="@attributeValue.Id" checked="@attributeValue.IsPreSelected" @(attribute.AttributeControlType == AttributeControlType.ReadonlyCheckboxes ? Html.Raw(" disabled=\"disabled\"") : null) />
}
                        <label for="@(controlId)_@(attributeValue.Id)">@attributeValue.Name</label>
                    </li>
                    }
                </ul>
            }
            break;
        case AttributeControlType.TextBox:
            {
                <div class="divDropShip" style="display:none">
                    <input name="@(controlId)" type="text" class="textbox" id="@(controlId)" value="@attribute.DefaultValue" />
                </div>
            }
            break;
        case AttributeControlType.MultilineTextbox:
            {
                <textarea id="@(controlId)" name="@(controlId)">@attribute.DefaultValue</textarea>
            }
            break;
        case AttributeControlType.Datepicker:
        case AttributeControlType.FileUpload:
        case AttributeControlType.ColorSquares:
        case AttributeControlType.ImageSquares:
            {
                //not support attribute type
            }
            break;
    }
    @if (attribute.IsRequired)
    {
        <nop-required />
    }
</div>
    }
    <script type="text/javascript">
        $(document).ready(function () {
            $('.checkDropShip').click(function () {
                $(".divDropShip").toggle(this.checked);
            });
        });
    </script>
